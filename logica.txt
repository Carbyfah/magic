# LÓGICA DE NEGOCIO COMPLETA - MAGIC TRAVEL

## 1. GESTIÓN DE AGENCIAS Y OPERACIÓN

### 1.1 Modelo de Negocio Multi-Agencia
- **Magic Travel** es la agencia principal que opera rutas y tours
- **Otras agencias** pueden transferir clientes a Magic Travel
- **Magic Travel** puede transferir clientes a otras agencias
- **Sistema de comisiones** entre agencias por transferencias

### 1.2 Estados del Sistema
- **Vehículos**: Disponible → Asignado → Mantenimiento
- **Rutas**: Activada → Llena → Ejecución → Cerrada → Liquidar
- **Reservas**: Pendiente → Confirmada → Pagada → Transferida → Cancelada
- **Pagos**: Por Cobrar → Cobrados → Confirmar Recibido

## 2. OPERACIÓN DE RUTAS Y TOURS

### 2.1 Activación de Rutas
```
Ruta Base + Fecha/Hora + Vehículo = Ruta Activa
- Control de capacidad por vehículo
- Asignación automática de estado "Activada"
- Validación de disponibilidad del vehículo
```

### 2.2 Control de Capacidad
```
Capacidad Total = Asientos del Vehículo
Ocupación Actual = Suma de (Adultos + Niños) en reservas confirmadas
Espacios Disponibles = Capacidad - Ocupación
Estado Ruta = Disponible | Casi Lleno (80%) | Completo
```

### 2.3 Gestión de Tours
```
Tour Base + Fecha/Hora + Tipo = Tour Activo
- Sin restricción de capacidad (depende del tipo)
- Precios pueden ser fijos o por persona
- Control de estados similar a rutas
```

## 3. SISTEMA DE PRECIOS Y RESERVAS

### 3.1 Cálculo de Precios
```
SERVICIO COLECTIVO:
- Precio Adulto = Precio Base del Servicio
- Precio Niño = Precio Base × 0.75 (25% descuento)
- Total = (Adultos × Precio Base) + (Niños × Precio Niño)

SERVICIO PRIVADO:
- Precio Total = Precio Fijo (sin importar cantidad de personas)
```

### 3.2 Sistema de Descuentos
```
Precio Final = Precio Base × (1 - Descuento%)
- Descuentos aplicables del 0% al 100%
- Cálculo automático en servicio_precio_descuento
- Los niños siempre tienen 25% descuento adicional
```

### 3.3 Validaciones de Reserva
```
ANTES DE CREAR RESERVA:
1. Verificar espacios disponibles en vehículo
2. Validar que la ruta esté en estado "Activada"
3. Calcular precio automáticamente
4. Verificar permisos del usuario

DESPUÉS DE CREAR RESERVA:
1. Actualizar ocupación de la ruta
2. Cambiar estado a "Llena" si se completa capacidad
3. Crear registro en caja si es venta directa pagada
```

## 4. ESCENARIOS DE TRANSFERENCIA (4 TIPOS)

### 4.1 VENTA_DIRECTA
```
- Agencia Servicio: Magic Travel
- Agencia Transferida: NULL
- Magic Travel vende directamente al cliente
- Cliente paga a Magic Travel
- Magic Travel opera el servicio
```

### 4.2 REUBICACION_INTERNA
```
- Agencia Servicio: Magic Travel
- Agencia Transferida: Magic Travel
- Cliente se mueve entre rutas/tours de Magic Travel
- No hay intercambio de dinero
- Solo cambio de servicio
```

### 4.3 MAGIC_TRANSFIERE
```
- Agencia Servicio: Magic Travel
- Agencia Transferida: Otra Agencia
- Magic Travel recibe cliente pero transfiere a otra agencia
- Magic Travel cobra comisión
- Otra agencia opera el servicio
```

### 4.4 MAGIC_RECIBE_OPERA
```
- Agencia Servicio: Otra Agencia
- Agencia Transferida: NULL
- Otra agencia envía cliente a Magic Travel
- Magic Travel opera el servicio
- Magic Travel cobra a la agencia origen
```

## 5. SISTEMA DE PAGOS Y CAJA

### 5.1 Formas de Pago
```
PAGO_CAJA:
- Cliente paga directamente en oficina
- Se crea registro automático en tabla 'caja'
- Estado reserva: "Pagada"

PAGO_CONDUCTOR:
- Cliente paga al conductor del vehículo
- Estado reserva: "Confirmar Recibido"
- Requiere confirmación posterior en sistema

PENDIENTE:
- Cliente no ha pagado
- Estado reserva: "Pendiente" o "Confirmada"
```

### 5.2 Control de Caja Diaria
```
SOLO para ventas directas Magic Travel:
- Auto-creación cuando reserva se marca como "Pagada"
- Registro de ingresos, descuentos y comisiones
- Control de vouchers y facturas SAT
- Integración con sistema de facturación
```

## 6. CONTROL DE EGRESOS POR RUTA

### 6.1 Gastos Operacionales
```
Cada ruta activa puede tener egresos:
- Combustible
- Peajes
- Comidas del conductor
- Mantenimiento emergente
- Otros gastos operacionales
```

### 6.2 Cálculo de Rentabilidad
```
Ganancia Ruta = Ingresos - Egresos - Pago Conductor
Ingresos = Suma de reservas_cobrar_a_pax
Egresos = Suma de cantidad_egreso
Pago Conductor = vehiculo_pago_conductor
```

## 7. MÓDULO DE VENTAS

### 7.1 Control de Ventas Directas
```
FILTROS:
- POR_COBRAR: Pendientes y confirmadas sin pago
- COBRADOS: Con pago confirmado en caja
- CONFIRMAR_RECIBIDO: Pagos pendientes de confirmar del conductor

MÉTRICAS:
- Total servicios del día
- Ingresos confirmados vs pendientes
- Porcentaje de pagos en caja vs conductor
```

### 7.2 Liquidación de Rutas
```
ESTADOS DE LIQUIDACIÓN:
- PENDIENTE_PAGOS: Hay reservas sin cobrar
- PENDIENTE_CONFIRMACION: Hay pagos de conductor sin confirmar
- LISTO_LIQUIDAR: Todos los pagos confirmados
- LIQUIDADA: Ruta cerrada contablemente

PROCESO:
1. Confirmar todos los pagos
2. Registrar todos los egresos
3. Calcular ganancia neta
4. Cambiar estado a "Liquidar Ruta"
```

## 8. MÓDULO DE CONTABILIDAD

### 8.1 Estados de Cuenta por Agencia
```
PARA CADA AGENCIA:
- Servicios operados por Magic Travel
- Servicios transferidos a Magic Travel
- Comisiones ganadas/pagadas
- Balance neto entre agencias
```

### 8.2 Control de Vouchers
```
VOUCHERS REQUERIDOS:
- Para servicios transferidos entre agencias
- Para servicios con pago diferido
- Para control de comisiones

ESTADOS:
- CON_VOUCHER: Documentación completa
- SIN_VOUCHER: Pendiente de documentar
- PENDIENTE_LIQUIDACION: Servicio no liquidado
```

## 9. SISTEMA DE PERMISOS GRANULARES

### 9.1 Módulos del Sistema
```
MÓDULOS DISPONIBLES:
- reservas, rutas, tours, vehiculos, empleados
- reportes, configuracion, agencias, ventas, contabilidad

PERMISOS POR MÓDULO:
- puede_ver: Acceso de lectura
- puede_crear: Crear nuevos registros
- puede_editar: Modificar existentes
- puede_eliminar: Soft delete
```

### 9.2 Control de Acceso
```
VALIDACIÓN POR REQUEST:
- Verificar si usuario tiene permiso para el módulo
- Validar acción específica (ver/crear/editar/eliminar)
- Bloquear acceso si no tiene permisos
```

## 10. AUTOMATIZACIONES CRÍTICAS

### 10.1 Triggers Automáticos (ahora en Backend)
```
SERVICIOS:
- Auto-cálculo de precios con descuento
- Validación de porcentajes 0-100%

RESERVAS:
- Auto-cálculo de precio por adultos/niños
- Validación de capacidad del vehículo
- Auto-creación en caja para ventas directas

CAJA:
- Auto-cálculo de total_pax = adultos + niños
- Consistencia de datos financieros
```

### 10.2 Validaciones de Negocio
```
RESERVAS:
- Una reserva DEBE tener ruta O tour (no ambos)
- Cantidad adultos > 0
- Cantidad niños >= 0 o NULL
- No exceder capacidad del vehículo

SERVICIOS:
- Descuento entre 0% y 100%
- Precio > 0
- Debe estar asociado a ruta O tour

EGRESOS:
- Cantidad > 0
- Debe estar asociado a ruta activa válida
```

## 11. REPORTES Y MÉTRICAS

### 11.1 Dashboard Principal
```
MÉTRICAS DIARIAS:
- Ocupación promedio de vehículos
- Ingresos del día por módulo
- Reservas pendientes de pago
- Rutas pendientes de liquidar

GRÁFICOS:
- Tendencia de ventas por semana/mes
- Ocupación por ruta
- Balance por agencia
```

### 11.2 Exportaciones
```
FORMATOS DISPONIBLES:
- Excel: Para análisis detallado
- PDF: Para reportes ejecutivos

DATOS EXPORTABLES:
- Todas las entidades con filtros
- Reportes consolidados
- Estados de cuenta
- Análisis de rentabilidad
```

## 12. FLUJO OPERACIONAL TÍPICO

### 12.1 Proceso Diario
```
1. ACTIVAR RUTAS del día con vehículos disponibles
2. RECIBIR RESERVAS de clientes directos y agencias
3. CONTROLAR CAPACIDAD y cambiar estados automáticamente
4. PROCESAR PAGOS en caja o marcar para conductor
5. REGISTRAR EGRESOS durante operación
6. LIQUIDAR RUTAS al final del día
7. GENERAR REPORTES diarios
```

### 12.2 Proceso de Transferencia
```
1. AGENCIA EXTERNA contacta a Magic Travel
2. CREAR RESERVA con id_agencia_transferida
3. DEFINIR ESCENARIO automáticamente
4. OPERAR SERVICIO según corresponda
5. GENERAR VOUCHER para documentar
6. LIQUIDAR con agencia mensualmente
```

Esta lógica de negocio debe estar completamente implementada en el backend Laravel, eliminando la dependencia de triggers y funciones de base de datos para mayor control y mantenibilidad.